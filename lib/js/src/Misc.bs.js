// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Result = require("bs-platform/lib/js/belt_Result.js");
var Types$BorderTypes = require("./Types.bs.js");

function identity(a) {
  return a;
}

function mapResult(func, value) {
  return Belt_Result.map(value, func);
}

function map2Result(func, a, b) {
  if (b.tag) {
    return /* Error */Block.variant("Error", 1, [b[0]]);
  } else if (a.tag) {
    return /* Error */Block.variant("Error", 1, [a[0]]);
  } else {
    return /* Ok */Block.variant("Ok", 0, [Curry._2(func, a[0], b[0])]);
  }
}

function traverseResults(func, l) {
  return List.fold_right((function (cur, acc) {
                return map2Result((function (curValue, accValue) {
                              return /* :: */Block.simpleVariant("::", [
                                        curValue,
                                        accValue
                                      ]);
                            }), Curry._1(func, cur), acc);
              }), l, /* Ok */Block.variant("Ok", 0, [/* [] */0]));
}

function listToStringMap(l) {
  return List.fold_right((function (param, map) {
                return Curry._3(Types$BorderTypes.StringMap[/* add */3], param[0], param[1], map);
              }), l, Types$BorderTypes.StringMap[/* empty */0]);
}

var R = 0;

var D = 0;

exports.R = R;
exports.D = D;
exports.identity = identity;
exports.mapResult = mapResult;
exports.map2Result = map2Result;
exports.traverseResults = traverseResults;
exports.listToStringMap = listToStringMap;
/* Types-BorderTypes Not a pure module */
